Select all warehouses.
SELECT *
  FROM Warehouses;

Select all boxes with a value larger than $150.
SELECT * 
  FROM Boxes
  WHERE Value > 150;


Select all distinct contents in all the boxes.
SELECT DISTINCT Contents
  FROM Boxes;

Select the average value of all the boxes.
SELECT AVG(Value)
  FROM Boxes;



Select the warehouse code and the average value of the boxes in each warehouse.
SELECT Warehouses.Code, AVG(Value)
  FROM Warehouses, Boxes
  WHERE Warehouses.Code = Boxes.Warehouse
  GROUP BY Warehouses.Code;

Same as previous exercise, but select only those warehouses where the average
value of the boxes is greater than 150.
SELECT Warehouses.Code, AVG(Value)
  FROM Warehouses, Boxes
  WHERE Warehouses.Code = Boxes.Warehouse
  GROUP BY Warehouses.Code
  HAVING AVG(value) > 150;



Select the code of each box, along with the name of the city the box is located
in.
SELECT Boxes.Code, Warehouses.Location
  FROM Boxes JOIN Warehouses
  ON Boxes.Warehouse = Warehouses.Code;



Select the warehouse codes, along with the number of boxes in each warehouse.
Optionally, take into account that some warehouses are empty (i.e., the box
count should show up as zero, instead of omitting the warehouse from the
result).
SELECT Warehouses.Code, COUNT(Boxes.Code)
  FROM Warehouses JOIN Boxes
  ON Warehouses.Code = Boxes.Warehouse
  GROUP BY Warehouses.Code;



Select the codes of all warehouses that are saturated (a warehouse is saturated
if the number of boxes in it is larger than the warehouse's capacity).
SELECT Warehouses.Code
  FROM Warehouses JOIN Boxes
  ON Warehouses.Code = Boxes.Warehouse
  GROUP BY Warehouses.Code
  HAVING COUNT(Boxes.Code) >= Capacity;



Select the codes of all the boxes located in Chicago.
SELECT Boxes.Code
  FROM Boxes JOIN Warehouses
  ON Warehouses.Code = Boxes.Warehouse
  WHERE Location = "Chicago";


Create a new warehouse in New York with a capacity for 3 boxes.
INSERT INTO Warehouses(Location, Capacity)
  VALUES ("New York", 3);



Create a new box, with code "H5RT", containing "Papers" with a value of $200,
and located in warehouse 2.
INSERT INTO Boxes
  VALUES ("H5RT", "Papers", 200, 2);

Reduce the value of all boxes by 15%.
UPDATE Boxes
  SET Value = (Value * 0.85);


Apply a 20% value reduction to boxes with a value larger than the average value
of all the boxes.
UPDATE Boxes
  SET Value = (Value * 0.8)
  WHERE Value > (
    SELECT AVG(Value)
      FROM Boxes
  );

   

   Remove all boxes with a value lower than $100.
DELETE  
  FROM Boxes
  WHERE Value < 100;
   

   Remove all boxes from saturated warehouses.
DELETE 
  FROM Boxes 
  WHERE Warehouse IN (
    SELECT Warehouses.Code
      FROM Warehouses JOIN Boxes
      ON Warehouses.Code = Boxes.Warehouse
      GROUP BY Warehouses.Code
      HAVING COUNT(Boxes.Code) >= Capacity
    );

   
